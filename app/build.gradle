apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def keyPropertiesFile = rootProject.file("app/gradle_secret.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))

android {
    signingConfigs {
        release {
            storeFile file(keyProperties["storeFilePath"])
            storePassword keyProperties["storePassword"]
            keyAlias keyProperties["keyAlias"]
            keyPassword keyProperties["keyPassword"]
        }
    }

    compileSdkVersion 29

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.ntetz.android.nyannyanengine_android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    dataBinding {
        enabled true
    }

    flavorDimensions "apiEnv"
    productFlavors {
        dev {
            dimension "apiEnv"
            applicationIdSuffix ".dev"
            firebaseAppDistribution {
                appId = keyProperties["appDistributionIdDev"]
                serviceCredentialsFile = "$rootDir/app/android-deploy-user-dev.json"
                groups = keyProperties["appDistributionGroupsDev"]
            }
        }
        prd {
            dimension "apiEnv"
            firebaseAppDistribution {
                appId = keyProperties["appDistributionIdPrd"]
                serviceCredentialsFile = "$rootDir/app/android-deploy-user-prd.json"
                groups = keyProperties["appDistributionGroupsPrd"]
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

buildscript {
    repositories {
        google()
        jcenter()
    }

    configurations {
        ktlint
    }

    dependencies {
        classpath 'com.google.firebase:firebase-appdistribution-gradle:2.0.0'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.room:room-ktx:2.2.5'
    kapt "androidx.room:room-compiler:2.2.5"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.4.0'
    testImplementation 'com.google.truth:truth:1.0.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def koin_version = "2.0.1"
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    implementation "org.koin:koin-android-ext:$koin_version"

    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.6.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.6.0'

    ktlint "com.pinterest:ktlint:0.36.0"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    implementation 'com.google.android.material:material:1.1.0'

    // jaxbの記述は、dataBinding有効化時でも、java 11環境でgradle checkを行えるようにするためのもの。
    if (project.hasProperty('kapt')) {
        kapt "javax.xml.bind:jaxb-api:2.3.1"
        kapt "com.sun.xml.bind:jaxb-core:2.3.0.1"
        kapt "com.sun.xml.bind:jaxb-impl:2.3.2"
    }
    annotationProcessor "javax.xml.bind:jaxb-api:2.3.1"
    annotationProcessor "com.sun.xml.bind:jaxb-core:2.3.0.1"
    annotationProcessor "com.sun.xml.bind:jaxb-impl:2.3.2"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
